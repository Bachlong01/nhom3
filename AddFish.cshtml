@page
@model KoiShow.WebApp.Pages.AddFishModel

@{
    ViewData["Title"] = "Thêm Cá Koi";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title> 
    <style>
        /* General styling */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f8f8;
            margin: 0;
            padding: 0;
        }

        /* Container */
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Title */
        .title {
            text-align: center;
            font-size: 2.5rem;
            font-weight: bold;
            color: #3B82F6;
            margin-top: 50px;
        }

        /* Form Container */
        .form-container {
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-top: 40px;
        }

        .input-group {
            margin-bottom: 20px;
        }

            .input-group label {
                display: block;
                font-size: 1rem;
                color: #333;
                margin-bottom: 8px;
            }

            .input-group input {
                width: 100%;
                padding: 12px;
                font-size: 1rem;
                border: 1px solid #ddd;
                border-radius: 5px;
                transition: border-color 0.3s;
            }

                .input-group input:focus {
                    border-color: #3B82F6;
                    outline: none;
                }

        .submit-btn {
            background-color: #3B82F6;
            color: white;
            padding: 12px 20px;
            font-size: 1.1rem;
            border: none;
            border-radius: 5px;
            width: 100%;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .submit-btn:hover {
                background-color: #2563EB;
            }

        /* Fish List */
.fish-list, .competition-list {
    max-width: 800px;
    margin: 20px auto;
}

.fish-item, .competition-item {
    display: flex;
    align-items: center;
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 8px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
}

    .fish-item img, .competition-item img {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 50%;
        margin-right: 20px;
    }

.fish-details, .competition-details {
    flex: 1;
}

    .fish-details h3, .competition-details h3 {
        margin: 0;
        color: black;
    }

    .fish-details p, .competition-details p {
        margin: 5px 0 0 0;
    }

    </style>
</head>
<body>

    <div class="container">
        <h2 class="title">Thêm Cá Koi</h2>
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div style="color: red; font-weight: bold;">@Model.ErrorMessage</div>
        }

        <div class="form-container">
            <form id="fishForm" onsubmit="handleFormSubmit(event)" enctype="multipart/form-data">
                <div class="input-group">
                    <label for="name">Tên Cá</label>
                    <input type="text" id="name" name="name" required placeholder="Tên Cá">
                </div>

                <div class="input-group">
                    <label for="description">Mô Tả</label>
                    <input type="text" id="description" name="description" required placeholder="Giống loài, độ tuổi, kích thước">
                </div>

                <div class="input-group">
                    <label for="image">Ảnh Cá</label>
                    <input type="file" id="image" name="image" accept="image/*" required>
                </div>

                <button type="submit" class="submit-btn">Thêm Cá</button>
            </form>
        </div>

        <div class="fish-list-container">
            <h3>Danh Sách Cá Koi Đã Thêm</h3>
            <div id="fishes" class="fish-list"></div>
        </div>
    </div>

    <script>
        function getLoggedInUser() {
            return JSON.parse(localStorage.getItem('loggedInUser'));
        }

        function updateLoggedInUser(user) {
            localStorage.setItem('loggedInUser', JSON.stringify(user));
        }

        function getFishes() {
            const user = getLoggedInUser();
            return user ? JSON.parse(localStorage.getItem(`${user.username}_fishes`) || "[]") : [];
        }

        function saveFishes(fishes) {
            const user = getLoggedInUser();
            if (user) {
                localStorage.setItem(`${user.username}_fishes`, JSON.stringify(fishes));
            }
        }

        function displayFishes(targetElementId) {
            const fishes = getFishes();
            const fishList = document.getElementById(targetElementId);
            fishList.innerHTML = '';

            if (fishes.length === 0) {
                fishList.innerHTML = '<p>Chưa có cá nào được thêm.</p>';
                return;
            }

            fishes.forEach((fish) => {
                const fishItem = document.createElement('div');
                fishItem.className = 'fish-item';

                const img = document.createElement('img');
                img.src = fish.image;
                img.alt = fish.name;

                const details = document.createElement('div');
                details.className = 'fish-details';

                const name = document.createElement('h3');
                name.textContent = fish.name;

                const description = document.createElement('p');
                description.textContent = fish.description;

                details.appendChild(name);
                details.appendChild(description);
                fishItem.appendChild(img);
                fishItem.appendChild(details);

                fishList.appendChild(fishItem);
            });
        }

        function handleFormSubmit(event) {
            event.preventDefault(); // Ngăn chặn hành vi mặc định của form

            const name = document.getElementById('name').value.trim();
            const description = document.getElementById('description').value.trim();
            const imageInput = document.getElementById('image');

            if (imageInput.files && imageInput.files[0]) {
                const reader = new FileReader();

                reader.onload = function (event) {
                    const imageData = event.target.result;

                    const newFish = {
                        name: name,
                        description: description,
                        image: imageData
                    };

                    const fishes = getFishes();
                    fishes.push(newFish);
                    saveFishes(fishes);
                    displayFishes('fishes'); // Hiển thị lại danh sách cá đã thêm

                    const user = getLoggedInUser();
                    if (user) {
                        if (!user.koiProfiles) {
                            user.koiProfiles = []; // Khởi tạo mảng nếu chưa có
                        }
                        user.koiProfiles.push(newFish);
                        updateLoggedInUser(user); // Cập nhật người dùng
                    }

                    document.getElementById('fishForm').reset(); // Reset form
                };

                reader.readAsDataURL(imageInput.files[0]);
            } else {
                alert('Vui lòng chọn ảnh cho cá.');
            }
        }

        // Hiển thị danh sách cá khi trang được tải
        document.addEventListener("DOMContentLoaded", function () {
            displayFishes('fishes');
        });
    </script>
</body>
</html>